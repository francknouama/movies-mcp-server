# Movies MCP Server Environment Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Primary database connection (use this OR individual components below)
DATABASE_URL=postgres://movies_user:secure_password@localhost:5432/movies_db?sslmode=require

# Alternative: Individual database components
DB_HOST=localhost
DB_PORT=5432
DB_NAME=movies_db
DB_USER=movies_user
DB_PASSWORD=secure_password
DB_SSL_MODE=require

# Database connection pool settings
DB_MAX_CONNECTIONS=100
DB_MAX_IDLE_CONNECTIONS=10
DB_MAX_LIFETIME=1h

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server ports
PORT=8080
HTTP_PORT=8080
METRICS_PORT=9090

# Server timeouts
READ_TIMEOUT=30s
WRITE_TIMEOUT=30s
IDLE_TIMEOUT=120s
SHUTDOWN_TIMEOUT=30s

# Maximum request size
MAX_REQUEST_SIZE=10MB

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: debug, info, warn, error
LOG_LEVEL=info

# Log format: json, text
LOG_FORMAT=json

# Log output: stdout, stderr, file
LOG_OUTPUT=stdout

# Log file path (when LOG_OUTPUT=file)
LOG_FILE=/var/log/movies-mcp-server.log

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT secret for authentication (generate with: openssl rand -base64 32)
JWT_SECRET=your-super-secure-jwt-secret-here-change-this-in-production

# API key for external access
API_KEY=your-api-key-for-authentication

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com

# CORS allowed methods
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# CORS allowed headers
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# Rate limiting (requests per minute per IP)
RATE_LIMIT=1000

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Redis connection (optional, for caching)
REDIS_URL=redis://localhost:6379

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=100
REDIS_IDLE_TIMEOUT=5m

# Cache TTL settings
CACHE_TTL=1h
CACHE_MAX_SIZE=1000

# Cache enabled/disabled
CACHE_ENABLED=true

# =============================================================================
# MONITORING AND METRICS
# =============================================================================

# Prometheus metrics enabled
PROMETHEUS_ENABLED=true

# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=5s

# Performance profiling (pprof)
PROFILE_ENABLED=false
PROFILE_PORT=6060

# Distributed tracing
TRACE_ENABLED=false
TRACE_ENDPOINT=http://jaeger:14268/api/traces

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode (enables additional logging and error details)
DEBUG=false

# Enable request/response logging
REQUEST_LOGGING=false

# Hot reload (development only)
HOT_RELOAD=false

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable experimental features
EXPERIMENTAL_FEATURES=false

# Enable API versioning
API_VERSIONING=true

# Enable request validation
REQUEST_VALIDATION=true

# Enable response compression
RESPONSE_COMPRESSION=true

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# External movie API (if integrating with external services)
EXTERNAL_API_URL=https://api.themoviedb.org/3
EXTERNAL_API_KEY=your-external-api-key-here

# Email service (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-email-password
SMTP_FROM=noreply@yourdomain.com

# =============================================================================
# KUBERNETES/DEPLOYMENT SPECIFIC
# =============================================================================

# Pod name and namespace (automatically set in Kubernetes)
POD_NAME=
POD_NAMESPACE=
POD_IP=

# Node name (automatically set in Kubernetes)
NODE_NAME=

# Service name
SERVICE_NAME=movies-mcp-server

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================

# Backup settings
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/backups

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=Service temporarily unavailable for maintenance

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# TLS enabled
TLS_ENABLED=false

# TLS certificate and key paths
TLS_CERT_FILE=/etc/ssl/certs/server.crt
TLS_KEY_FILE=/etc/ssl/private/server.key

# TLS minimum version (1.2 or 1.3)
TLS_MIN_VERSION=1.2