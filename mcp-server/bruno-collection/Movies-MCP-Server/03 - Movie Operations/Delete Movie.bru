meta {
  name: Delete Movie
  type: http
  seq: 4
}

post {
  url: {{base_url}}/mcp
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}

body:json {
  {
    "jsonrpc": "2.0",
    "id": 13,
    "method": "tools/call",
    "params": {
      "name": "delete_movie",
      "arguments": {
        "id": {{movie_id || 1}}
      }
    }
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response is valid JSON-RPC", function() {
    expect(res.getBody()).to.have.property('jsonrpc', '2.0');
    expect(res.getBody()).to.have.property('id', 13);
    expect(res.getBody()).to.have.property('result');
  });
  
  test("Movie deletion successful", function() {
    const result = res.getBody().result;
    expect(result).to.have.property('content');
    expect(result.content).to.be.an('array');
    expect(result.content[0]).to.have.property('type', 'text');
    expect(result.content[0].text).to.include('Successfully deleted');
  });
  
  test("Deletion confirmation includes movie details", function() {
    const result = res.getBody().result;
    const text = result.content[0].text;
    expect(text).to.match(/Successfully deleted movie '.*' \(ID: \d+\)/);
  });
}

docs {
  # Delete Movie
  
  Permanently removes a movie from the database.
  
  ## Required Parameters  
  - `id` - Movie ID (integer)
  
  ## Expected Response
  
  ```json
  {
    "jsonrpc": "2.0",
    "id": 13,
    "result": {
      "content": [
        {
          "type": "text",
          "text": "Successfully deleted movie 'The Matrix' (ID: 1)"
        }
      ]
    }
  }
  ```
  
  ## Error Cases
  - Movie not found: Returns error with code -32602 and message "Movie not found"
  
  ## ⚠️ Warning
  This operation is irreversible. The movie will be permanently removed from the database.
}