meta {
  name: Get Movie
  type: http
  seq: 2
}

post {
  url: {{base_url}}/mcp
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}

body:json {
  {
    "jsonrpc": "2.0",
    "id": 11,
    "method": "tools/call",
    "params": {
      "name": "get_movie",
      "arguments": {
        "id": {{movie_id || 1}}
      }
    }
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response is valid JSON-RPC", function() {
    expect(res.getBody()).to.have.property('jsonrpc', '2.0');
    expect(res.getBody()).to.have.property('id', 11);
    expect(res.getBody()).to.have.property('result');
  });
  
  test("Movie data returned", function() {
    const result = res.getBody().result;
    expect(result).to.have.property('content');
    expect(result.content).to.be.an('array');
    expect(result.content[0]).to.have.property('type', 'text');
    expect(result.content[0].text).to.include('Found movie:');
  });
  
  test("Movie JSON is valid", function() {
    const result = res.getBody().result;
    const text = result.content[0].text;
    const jsonMatch = text.match(/\{.*\}/s);
    expect(jsonMatch).to.not.be.null;
    
    const movieData = JSON.parse(jsonMatch[0]);
    expect(movieData).to.have.property('id');
    expect(movieData).to.have.property('title');
  });
}

docs {
  # Get Movie by ID
  
  Retrieves a single movie from the database by its ID.
  
  ## Required Parameters
  - `id` - Movie ID (integer)
  
  ## Expected Response
  
  ```json
  {
    "jsonrpc": "2.0",
    "id": 11, 
    "result": {
      "content": [
        {
          "type": "text",
          "text": "Found movie: The Matrix\n\n{\"id\":1,\"title\":\"The Matrix\",\"director\":\"The Wachowskis\",\"year\":1999,\"genre\":\"Sci-Fi\",\"rating\":8.7,\"description\":\"A computer programmer discovers that reality as he knows it is not real.\",\"poster_url\":\"https://example.com/matrix-poster.jpg\"}"
        }
      ]
    }
  }
  ```
  
  ## Error Cases
  - Movie not found: Returns error with code -32602 and message "Movie not found"
}