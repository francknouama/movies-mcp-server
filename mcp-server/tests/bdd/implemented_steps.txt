a movie exists with title "([^"]*)"
a movie exists with:
all actor names should contain "([^"]*)"
all actors should have birth year between (\d+) and (\d+)
all movies should have director "([^"]*)"
all returned movies should have rating between ([0-9.]+) and ([0-9.]+)
all test data should be removed
an actor exists with name "([^"]*)"
an actor exists with:
client (\d+) and client (\d+) simultaneously try to:
data integrity should be maintained
I call the "([^"]*)" method with URI "([^"]*)"
I call the "([^"]*)" tool with limit (\d+)
I call the "([^"]*)" tool with movie "([^"]*)"
I call the "([^"]*)" tool with movie ID (\d+)
I call the "([^"]*)" tool with the actor ID
I call the "([^"]*)" tool with the movie ID
I call the "([^"]*)" tool with the same actor and movie
I call the "([^"]*)" tool with:
I delete actor "([^"]*)"
I delete movie "([^"]*)"
I have a valid MCP client connection
I link actor "([^"]*)" to movie "([^"]*)"
I search for movies with "([^"]*)"
I search for movies with title "([^"]*)"
I send a request with invalid method "([^"]*)"
I send a resources/list request
I send a tools/list request
I send an initialize request with protocol version "([^"]*)"
I send an initialize request with:
I store the actor ID as "([^"]*)"
I store the movie ID as "([^"]*)"
multiple clients are connected
one operation should handle the conflict gracefully
one operation should succeed
the actor bio should be updated to "([^"]*)"
the actor is already linked to the movie
the actor is linked to the following movies:
the actor is linked to the movie
the actor name should be "([^"]*)"
the actor name should be updated to "([^"]*)"
the actor should be associated with all linked movies
the actor should be linked to the movie
the actor should have an assigned ID
the actor should no longer be linked to the movie
the actor should no longer exist in the database
the cast should include:
the database contains (\d+)\+ movies
the database contains movies with various ratings
the database contains sample data
the database contains sample movie data
the database is clean
the error code should be (-?\d+)
the error message should contain "([^"]*)"
the error message should indicate movie not found
the error message should indicate the relationship already exists
the error should contain validation errors for:
the error should indicate unsupported protocol version
the first movie should have rating ([0-9.]+)
the following actors are linked to the movie:
the following actors exist:
the following movies exist:
the following movies with cast exist:
the MCP connection is initialized
the MCP server is running
the message should indicate successful linking
the movie rating should be updated to ([0-9.]+)
the movie should have an assigned ID
the movie should no longer exist in the database
the movie title should be "([^"]*)"
the movie title should be updated to "([^"]*)"
the movie title should contain "([^"]*)"
the movies should be "([^"]*)" and "([^"]*)"
the movies should be ordered by rating descending
the original movie should not be included in results
the protocol version should be "([^"]*)"
the response should be successful
the response should contain (\d+) actors?
the response should contain (\d+) movie IDs
the response should contain (\d+) movies?
the response should contain a movie with:
the response should contain an actor with:
the response should contain an error
the response should contain an error with message "([^"]*)"
the response should contain movies with similar characteristics
the response should contain poster storage statistics
the response should contain server capabilities
the response should contain the actor details
the response should contain the created movie
the response should contain the following resources:
the response should contain the following tools:
the response should contain up to (\d+) movies
the response should contain:
the response should indicate total available results
the response time should be under (\d+) seconds
the results should start from the (\d+)(?:st|nd|rd|th) movie
