And a movie exists with title "Forrest Gump"
And a movie exists with title "Test Movie"
And all actor names should contain "Chris"
And all actors should have birth year between 1975 and 1995
And all movies should be from years <min_year> to <max_year>
And all movies should have director "Quentin Tarantino"
And all returned movies should have rating between 8.5 and 9.5
And data integrity should be maintained
And I delete actor "workflow_actor1_id"
And I delete actor "workflow_actor2_id"
And I have a valid MCP client connection
And I link actor "workflow_actor2_id" to movie "workflow_movie_id"
And I store the actor ID as "workflow_actor1_id"
And I store the actor ID as "workflow_actor2_id"
And I store the movie ID as "workflow_movie_id"
And one operation should handle the conflict gracefully
And the actor bio should be updated to "Updated biography"
And the actor is already linked to the movie
And the actor is linked to the following movies:
And the actor is linked to the movie
And the actor name should be "Morgan Freeman"
And the actor name should be updated to "Updated Test Actor"
And the actor should be associated with all linked movies
And the actor should be linked to the movie
And the actor should have an assigned ID
And the actor should no longer be linked to the movie
And the actor should no longer exist in the database
And the cast should include:
And the database contains sample movie data
And the database is clean
And the error code should be -32601
And the error message should contain "Method not found"
And the error message should indicate movie not found
And the error message should indicate the relationship already exists
And the error should contain validation errors for:
And the error should indicate unsupported protocol version
And the first movie should have rating 9.5
And the following actors are linked to the movie:
And the MCP connection is initialized
And the message should indicate successful linking
And the movie rating should be updated to 8.5
And the movie should have an assigned ID
And the movie should no longer exist in the database
And the movie title should be "The Godfather"
And the movie title should be updated to "Updated Test Movie"
And the movie title should contain "Interstellar"
And the movies should be "Titanic" and "Inception"
And the movies should be ordered by rating descending
And the original movie should not be included in results
And the protocol version should be "2024-11-05"
And the response should contain 1 movie
And the response should contain 10 movies
And the response should contain 2 actors
And the response should contain 2 movies
And the response should contain 3 actors
And the response should contain 3 movie IDs
And the response should contain 4 actors
And the response should contain a movie with:
And the response should contain an actor with:
And the response should contain movies with similar characteristics
And the response should contain poster storage statistics
And the response should contain server capabilities
And the response should contain the actor details
And the response should contain the following resources:
And the response should contain the following tools:
And the response should contain the movie details
And the response should contain up to 50 movies
And the response should contain:
And the response should indicate total available results
And the response time should be under 2 seconds
And the results should start from the 21st movie
Given a movie exists with title "Movie to Delete"
Given a movie exists with title "Test Movie"
Given a movie exists with title "The Avengers"
Given a movie exists with:
Given an actor exists with name "Actor to Delete"
Given an actor exists with name "Brad Pitt"
Given an actor exists with name "Test Actor"
Given an actor exists with name "Tom Hanks"
Given an actor exists with:
Given movies exist from various decades
Given multiple clients are connected
Given the database contains 100+ movies
Given the database contains 1000+ movies
Given the database contains movies with various ratings
Given the database contains sample data
Given the following actors exist:
Given the following movies exist:
Given the following movies with cast exist:
Given the MCP connection is initialized
Given the MCP server is running
Then all test data should be removed
Then one operation should succeed
Then the movie rating should be updated to 8.5
Then the response should be successful
Then the response should contain 2 actors
Then the response should contain 2 movies
Then the response should contain an error
Then the response should contain the created movie
When client 1 and client 2 simultaneously try to:
When I call the "add_actor" tool with:
When I call the "add_movie" tool with:
When I call the "delete_actor" tool with the actor ID
When I call the "delete_movie" tool with the movie ID
When I call the "get_actor_movies" tool with the actor ID
When I call the "get_actor" tool with the actor ID
When I call the "get_movie_cast" tool with movie "workflow_movie_id"
When I call the "get_movie_cast" tool with the movie ID
When I call the "get_movie" tool with movie ID 99999
When I call the "get_movie" tool with the movie ID
When I call the "link_actor_to_movie" tool with the same actor and movie
When I call the "link_actor_to_movie" tool with:
When I call the "list_top_movies" tool with limit 2
When I call the "resources/read" method with URI "movies://database/info"
When I call the "resources/read" method with URI "movies://posters/info"
When I call the "search_actors" tool with:
When I call the "search_by_decade" tool with decade "<decade>"
When I call the "search_by_rating_range" tool with:
When I call the "search_movies" tool with:
When I call the "search_similar_movies" tool with the movie ID
When I call the "unlink_actor_from_movie" tool with:
When I call the "update_actor" tool with:
When I call the "update_movie" tool with:
When I delete movie "workflow_movie_id"
When I link actor "workflow_actor1_id" to movie "workflow_movie_id"
When I search for movies with "Leonardo DiCaprio"
When I search for movies with title "Test Movie Workflow"
When I send a request with invalid method "invalid_method"
When I send a resources/list request
When I send a tools/list request
When I send an initialize request with protocol version "1.0.0"
When I send an initialize request with:
